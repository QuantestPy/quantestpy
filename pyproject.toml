[build-system]
requires = ["wheel", "setuptools", "setuptools_scm[toml]"]
build-backend = "setuptools.build_meta"

[project]
name = "quantestpy"
license = { text = "Apache 2.0"}
description = "Software for testing quantum computing programs."
authors = [{name="Quantestpy Development Team"}]
requires-python = ">=3.7"
dependencies = [
  "numpy == 1.*"
]
dynamic = ["version"]
readme = "README.md"

[project.urls]
homepage ="https://github.com/QuantestPy/quantestpy"
repository = "https://github.com/QuantestPy/quantestpy"

[project.optional-dependencies]
ci = [
  "flake8 == 5.*",
  "isort == 5.*",
  "flake8-pyproject"
]
qiskit = [
  "qiskit == 0.*"
]
quri_parts = [
  "quri_parts == 0.*"
]
quri_parts_with_qulacs = [
  "quri_parts[qulacs] == 0.*"
]

[tool.setuptools]
include-package-data = true
zip-safe = false
packages = ["quantestpy"]

[tool.setuptools.dynamic]
version = {attr = "quantestpy._version.__version__"}

[tool.setuptools_scm]
write_to = "quantestpy/_version.py"
version_scheme = "release-branch-semver"
local_scheme = "no-local-version"

[tool.flake8]
per-file-ignores = "__init__.py:F401"

[tool.isort]
extend_skip_glob = ["*__init__.py"]
skip = ["./test/assertion/assert_circuit_equivalent_to_output_qubit_state/test_draw_circuit.py",
"./test/assertion/assert_circuit_equivalent_to_output_qubit_state/test_assert_internal.py",
"./test/assertion/assert_circuit_equivalent_to_output_qubit_state/test_drawer.py",
"assert_unary_iteration.py"]
